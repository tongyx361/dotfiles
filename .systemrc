#! /bin/bash
# should be run with `source` in ${DATA_ROOT} with desired shell
# assumed to be run after ".${SH_NAME}rc"

##########################################################

# shell selection

# SH_NAME="$(basename $0)" # sometimes wrong, being the script basename
SH_NAME=$(basename "$(ps -p $$ -o comm=)")
export SH_NAME
if ! grep -q "${SH_NAME}" <'/etc/shells'; then
  echo "[ERROR] Invalid Shell Name: ${SH_NAME}"
fi
# echo "[INFO] Using Shell: ${SH_NAME}"

# TODO: how to check if a shell is used?
# if [[ (! $(cat '/etc/shells' | grep -q 'zsh')) && (${SH_NAME} != 'zsh') ]]; then
#   # if zsh exists and is not used
#   echo "[INFO] Using zsh..."
#   zsh
# fi

##########################################################

# most basic configs

# export DATA_ROOT="$(dirname $(realpath $0))" # cannot be use with `source`
DATA_ROOT=$(pwd)
export DATA_ROOT
# echo "[INFO] DATA_ROOT: ${DATA_ROOT}"

##########################################################

# dotfiles repo

dotfiles_repo_dir="${DATA_ROOT}/dotfiles"
# echo "[INFO] dotfiles_repo_dir: ${dotfiles_repo_dir}"

# Check if the ${dotfiles_repo_dir} folder exists
if [ ! -d "${dotfiles_repo_dir}" ]; then
  echo "[WARNING] Folder ${dotfiles_repo_dir} not found."

  if git clone https://github.com/tongyx361/dotfiles.git; then
    echo "[INFO] Cloning succeeded!"
  else
    echo "[ERROR] Cloning failed, check network or permission settings."
    exit 1
  fi
fi

ln -s "${dotfiles_repo_dir}" ~/dotfiles

# source other dotfiles

cd "${dotfiles_repo_dir}" || return

cd dotfiles || return

if [[ ${SH_NAME} == 'zsh' ]]; then
  ( # Subshell to avoid changing the current shell
    cd zsh || exit
    for file in .*rc; do
      if [ -f "${file}" ]; then
        echo "[INFO] Running $(realpath "${file}")..."
        source "${file}"
      fi
    done
  )
fi

echo "[INFO] Sourcing dotfiles under $(pwd)"

for file in .*rc; do
  if [ -f "${file}" ]; then
    echo "[INFO] Running $(realpath "${file}")..."
    source "${file}"
  fi
done

if [ -n "${DEFAULT_CONDA_ENV}" ]; then
  ca "${DEFAULT_CONDA_ENV}"
fi

if [ -n "${WORK_REPO_PATH}" ]; then
  cd "${WORK_REPO_PATH}" || cd "${DATA_ROOT}" || return 1
fi
