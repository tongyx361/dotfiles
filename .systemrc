#! /bin/bash
# should be run with `source` in ${DATA_ROOT} with desired shell
# assumed to be run after ".${shell_name}rc"

##########################################################

# shell selection

# shell_name="$(basename $0)" # sometimes wrong, being the script basename
shell_name=$(basename "$(ps -p $$ -o comm=)")
if ! cat '/etc/shells' | grep -q ${shell_name}; then
  echo "[ERROR] Invalid Shell: ${shell_name}"
fi

echo "[INFO] Using Shell: ${shell_name}"
if [[ $(cat '/etc/shells' | grep -q 'zsh') && (${shell_name} != 'zsh') ]]; then
  # if zsh exists and is not used
  echo "[INFO] Using zsh..."
  zsh
fi

##########################################################

# most basic configs

# export DATA_ROOT="$(dirname $(realpath $0))" # cannot be use with `source`
DATA_ROOT=$(pwd)
export DATA_ROOT

##########################################################

# dotfiles repo

DOTFILES_REPO_DIR="${DATA_ROOT}/dotfiles"

# Check if the ${DOTFILES_REPO_DIR} folder exists
if [ ! -d "${DOTFILES_REPO_DIR}" ]; then
  echo "[WARNING] Folder ${DOTFILES_REPO_DIR} not found."
  git clone https://github.com/tongyx361/dotfiles.git

  if [ $? -eq 0 ]; then
    echo "[INFO] Cloning succeeded!"
  else
    echo "[ERROR] Cloning failed, check network or permission settings."
    exit 1
  fi
else
  echo "[INFO] ${DOTFILES_REPO_DIR} existed."
fi

# source other dotfiles

cd "${DOTFILES_REPO_DIR}"

cd dotfiles

# echo "[DEBUG] Sourcing dotfiles..."
for file in .*rc; do
  if [ -f "$file" ]; then
    echo "[INFO] Running $file..."
    source "$file"
  fi
done

if [[ ${shell_name} == 'zsh' ]]; then
  # echo "[DEBUG] Sourcing zplugrc..."
  cd zsh
  for file in .*rc; do
    if [ -f "$file" ]; then
      echo "[INFO] Running $file..."
      source "$file"
    fi
  done
fi

cd "${DATA_ROOT}"
